version: "3.8"
# Backing services: mysql, and influxdb

# volumes:
#   mysql-volume:

services:
  subscribe:
    build:
      dockerfile: "Dockerfile.subscribe"
      context: .
    environment:
      PGCONN: "postgres://postgres:secret@timescale:5432/ted"
    # Later for exporting jsonl
    # volumes:
    #   - ./data/subscribe/export:/export
    restart: unless-stopped
    depends_on:
      - "timescale"

  # docker run -d --name timescaledb -p 5432:5432 -e POSTGRES_PASSWORD=password timescale/timescaledb:1.7.4-pg12
  timescale:
    image: timescale/timescaledb:latest-pg14
    volumes:
      - ./data/timescale:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - ./PG.env
    # No need to expos database port in prod
    # ports:
    #   - 5432:5432 # not exposed in prod ?

  grafana:
    image: grafana/grafana-oss:9.4.7
    volumes:
      - ./data/grafana/grafana.db:/var/lib/grafana/grafana.db
    depends_on:
      - "timescale"
    ports:
      - 3000:3000

  # mysql:
  #   # image: mysql:5.7
  #   image: mysql:8.0
  #   # volumes:
  #   #   # Just specify a path and let the Engine create a volume
  #   #   # - /var/lib/mysql
  #   #   # use a relative host path
  #   #   # - ./data/mysql:/var/lib/mysql
  #   #   # Use a defined volume
  #   #   - mysql-volume:/var/lib/mysql
  #   restart: unless-stopped
  #   env_file:
  #     - ./MYSQL.env
  #   ports:
  #     - 3306:3306 # not exposed in prod ?

  # hasura:
  #   image: hasura/graphql-engine:v1.3.3
  #   ports:
  #   - "8888:8080"
  #   depends_on:
  #   - "timescale"
  #   restart: unless-stopped
  #   env_file:
  #     - ./HASURA.env
  #   command:
  #     - graphql-engine
  #     - serve
  #     - --enable-console
