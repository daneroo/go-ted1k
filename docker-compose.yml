version: "3.8"
# Backing services: mysql, and influxdb

# volumes:
#   mysql-volume:

services:
  mysql:
    # image: mysql:5.7
    image: mysql:8.0
    # volumes:
    #   # Just specify a path and let the Engine create a volume
    #   # - /var/lib/mysql
    #   # use a relative host path
    #   # - ./data/mysql:/var/lib/mysql
    #   # Use a defined volume
    #   - mysql-volume:/var/lib/mysql
    restart: unless-stopped
    env_file:
      - ./MYSQL.env
    ports:
      - 3306:3306 # not exposed in prod ?

  # docker run -d --name timescaledb -p 5432:5432 -e POSTGRES_PASSWORD=password timescale/timescaledb:1.7.4-pg12
  timescale:
    image: timescale/timescaledb:1.7.4-pg12
    volumes:
      - ./data/timescale:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - ./PG.env
    ports:
      - 5432:5432 # not exposed in prod ?

  hasura:
    image: hasura/graphql-engine:v1.3.3
    ports:
    - "8888:8080"
    depends_on:
    - "timescale"
    restart: unless-stopped
    env_file:
      - ./HASURA.env
    command:
      - graphql-engine
      - serve
      - --enable-console

  grafana:
    image: grafana/grafana:7.3.5
    volumes:
      - ./data/grafana/grafana.db:/var/lib/grafana/grafana.db
    depends_on:
      - "timescale"
    # links:
    #   - tedflux
    ports:
      - 3000:3000

# tedflux:
#   # image: tutum/influxdb:0.10
#   image: tutum/influxdb:0.9
#   hostname: tedflux
#   environment:
#     - PRE_CREATE_DB=ted
#   ports:
#     - "8083:8083"
#     - "8086:8086"
